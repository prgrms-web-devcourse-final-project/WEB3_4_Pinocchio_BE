plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'

    // QueryDSL 플러그인은 따로 없어도 동작 가능
}

group = 'sns'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Spring starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.security:spring-security-crypto:5.7.1'

    // 스웨거
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // QueryDSL (JPA + Annotation Processor)
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // Security & JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Email Support
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Bill of Materials (BOM) to manage Java library versions
    implementation platform('dev.langchain4j:langchain4j-bom:0.36.2')
    // MongoDB Java Sync Driver v5.2.0 or later
    implementation 'org.mongodb:mongodb-driver-sync:5.2.0'
    // Java library for Hugging Face models
    implementation 'dev.langchain4j:langchain4j-hugging-face'
    // Java library for URL Document Loader
    implementation 'dev.langchain4j:langchain4j'
    // Java library for Apache PDFBox Document Parser
    implementation 'dev.langchain4j:langchain4j-document-parser-apache-pdfbox'
    testImplementation 'org.assertj:assertj-core:3.24.2'

    // Open Korean Text
    implementation 'org.openkoreantext:open-korean-text:2.1.0'

    implementation 'org.scala-lang:scala-library:2.12.4'
    implementation 'com.twitter.penguin:korean-text:4.4.4'

    // Jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // TSID
    implementation 'com.github.f4b6a3:tsid-creator:5.2.4'

    //ollama
    implementation 'io.github.ollama4j:ollama4j:1.0.93'

    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

tasks.named('test') {

    useJUnitPlatform {
        includeTags 'integration'
    }
    systemProperty "spring.data.redis.host", System.getenv("SPRING_REDIS_HOST") ?: "localhost"
    systemProperty "spring.data.redis.port", System.getenv("SPRING_REDIS_PORT") ?: "6379"
    systemProperty "spring.datasource.url", System.getenv("SPRING_DATASOURCE_URL") ?: "jdbc:mysql://localhost:3306/test_db"
    systemProperty "spring.datasource.username", System.getenv("SPRING_DATASOURCE_USERNAME") ?: "root"
    systemProperty "spring.datasource.password", System.getenv("SPRING_DATASOURCE_PASSWORD") ?: "root"
    systemProperty "spring.data.mongodb.uri", System.getenv("SPRING_DATA_MONGODB_URI") ?: "mongodb://root:root@localhost:27017/test?authSource=admin"

    useJUnitPlatform()

}
