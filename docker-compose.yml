services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: devteam9
      MYSQL_DATABASE: pino
      MYSQL_USER: dev
      MYSQL_PASSWORD: devteam9
    ports:
      - "3306:3306"
    volumes:
      - /data/mysql:/var/lib/mysql
    networks:
      - app-network

  mongodb:
    image: mongo:6.0
    container_name: mongodb-container
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: dev
      MONGO_INITDB_ROOT_PASSWORD: devteam9
      MONGO_INITDB_DATABASE: pino
    ports:
      - "27017:27017"
    volumes:
      - /data/mongodb:/data/db
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "devteam9"]
    volumes:
      - /data/redis:/data
    networks:
      - app-network

  spring:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: spring-app-container
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - mongodb
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/pino
      SPRING_DATASOURCE_USERNAME: dev
      SPRING_DATASOURCE_PASSWORD: devteam9
      SPRING_DATA_MONGODB_URI: mongodb://dev:devteam9@mongodb:27017/pino
      SPRING_REDIS_HOST: redis
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/html:/usr/share/nginx/html
    depends_on:
      - spring
    networks:
      - app-network

networks:
  app-network:
    driver: bridge